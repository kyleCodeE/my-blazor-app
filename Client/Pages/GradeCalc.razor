@page "/gradecalc"

<h1>Grade calculators!</h1>

<p>Use this to figure out what grade you'll have after turning in an assignment! <br />
    <br />
    Use this format for percentage values: <br />
    90% => 90 <br />
    90.5% => 90.5    </p>

Current grade: <br/><input @bind="CurrentGrade"/> <br/>
Assignment type weight: <br/> <input @bind="AssignmentWeight"/> <br />
Assignment type total current max points (before assignment): <br /> <input @bind="TotalMax"/> <br />
Assignment type total current actual points: <br /> <input @bind="TotalActual"/> <br />
Assignment max points: <br /> <input @bind="max"/> <br />
Assignment expected points: <br /> <input @bind="actual"/> <br />
<br />

<button class="btn btn-primary" @onclick="DoProcessing">Calculate expected grade</button>

<p>Output: @ExpectedGrade</p>

<br />
<p>Alternatively, enter the desired grade below to find out how many points you need on the assignment!</p>

Desired grade: <br /><input @bind="DesiredGrade"/><br />
<br />

<button class="btn btn-primary" @onclick="CalculateMinPoints">Calculate minimum points</button>

<div class="results">
    <p>Minimum points needed: @minScoreStr out of @max.ToString() points <br />
        Canvas won't do this for you! (I think)</p>
    </div>

@code
{
    double CurrentGrade {get; set;}
    double AssignmentWeight {get; set;}
    double TotalMax {get; set;}
    double TotalActual {get; set;}
    double max {get; set;}
    double actual {get; set;}
    double DesiredGrade {get; set;}

    private string ExpectedGrade {get; set;}
    private string minScoreStr {get; set;}
    private void DoProcessing()

    {
        /*double CurrentGrade = double.Parse(CurrentGrade);
        double AssignmentWeight = double.Parse(AssignmentWeight);
        double TotalMax = double.Parse(TotalMax);
        double TotalActual = double.Parse(TotalActual);
        double max = double.Parse(max);
        double actual = double.Parse(actual);*/

        double gradeDbl;
        gradeDbl = CurrentGrade - ((TotalActual / TotalMax * AssignmentWeight) - (((TotalActual + actual) / (TotalMax + max)) * AssignmentWeight));

        ExpectedGrade = gradeDbl.ToString();
    }

    private void CalculateMinPoints()
    {
        double minScoreDbl;
        minScoreDbl = -(-DesiredGrade * TotalMax * (TotalMax + max) + (CurrentGrade * TotalMax) * (TotalMax + max) - (max * TotalActual * AssignmentWeight)) / (TotalMax * AssignmentWeight);

        minScoreStr = minScoreDbl.ToString();

        const results = document.querySelector('.results');
        results.style.display() = 'block';
    }

    function displayResults() {
      const results = document.querySelector('.results');
      results.style.display = 'block';
    }
}
